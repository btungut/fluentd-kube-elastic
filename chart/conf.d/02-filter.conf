<match k8s.**>
  @type rewrite_tag_filter
  <rule>
    key log
    pattern /^\{(.+)\}$/
    tag json.${tag}
  </rule>
  <rule>
    key log
    pattern /^\{(.+)\}$/
    tag plain.${tag}
    invert true
  </rule>
</match>

{{- if .Values.conf.ignoredWords }}
<filter **>
  @type grep
  <exclude>
    key log
    pattern /{{ .Values.conf.ignoredWords | join "|" | replace "/" "\\/" }}/
  </exclude>
</filter>
{{- end }}

<filter json.**>
  @type parser
  key_name log
  reserve_data true
  reserve_time true
  remove_key_name_field true
  emit_invalid_record_to_error false
  replace_invalid_sequence true
  hash_value_field obj
  <parse>
      @type json
  </parse>
</filter>

<filter plain.**>
  @type concat
  key log
  flush_interval 10
  timeout_label @NORMAL
  multiline_start_regexp /{{ .Values.conf.multilinePattern }}/
</filter>

<match **.k8s.**>
  @type relabel
  @label @NORMAL
</match>

<label @NORMAL>
 <filter **.k8s.**>
    @type kubernetes_metadata
    skip_container_metadata false
    skip_namespace_metadata false
    skip_labels false
    skip_master_url true
  </filter>

  <filter **.k8s.**>
    @type record_transformer
    @id create_timestamp
    <record>
      @timestamp ${record["time"]}
    </record>
  </filter>

  <filter **.k8s.**>
    @type record_transformer
    @id remove_keys
    remove_keys {{ include "__get_mergedRemovedFields" . }}
  </filter>


{{- if .Values.conf.replaceDotsWithUnderscore }}
  <filter **.k8s.**>
    @type script
    path /fluentd/etc/files/replaceDotsWithUnderscore.rb
  </filter>
{{- end }}

{{- if .Values.conf.prometheus.enabled }}
  <filter **.k8s.**>
    @type prometheus
    <metric>
      name fluentd_input_records_total
      type counter
      desc The total number of incoming records
      <labels>
        tag ${tag}
        hostname ${hostname}
      </labels>
    </metric>
  </filter>

  {{ if .Values.conf.prometheus.totalRecordsByNamespace }}
    <filter **.k8s.**>
      @type prometheus
      <metric>
        name fluentd_input_records_total_by_namespaces
        type counter
        desc The total number of incoming records by namespaces
        <labels>
          namespace $.kubernetes.namespace_name
        </labels>
      </metric>
    </filter>
  {{ end }}

  {{ if .Values.conf.prometheus.totalRecordsByImage }}
    <filter **.k8s.**>
      @type prometheus
      <metric>
        name fluentd_input_records_total_by_image
        type counter
        desc The total number of incoming records by image
        <labels>
          image $.kubernetes.container_image
        </labels>
      </metric>
    </filter>
  {{ end }}
{{- end }}

  <match **.k8s.**>
    @type relabel
    @label @OUTPUT
  </match>
</label>
